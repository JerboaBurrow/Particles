plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.gms.oss-licenses-plugin'
}

def props = new Properties()
def foundKeys = false

try {
    def propsFile = rootProject.file('../keys/spp.prop')
    props.load(new FileInputStream(propsFile))
    foundKeys = true
}
catch(e){
    print("WARNING:    key properties not found")
}
finally {

}

android {

    testOptions {
        unitTests.all {
            // All the usual Gradle options.
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }

    signingConfigs {
        release{}
        if (foundKeys) {
            release.storeFile = file(props['storeFile'])
            release.storePassword = props['storePassword']
            release.keyAlias = props['keyAlias']
            release.keyPassword = props['keyPassword']
        }
    }

    compileSdk 33

    defaultConfig {
        applicationId "app.jerboa.spp"
        minSdk 23
        targetSdk 33
        versionCode 27
        versionName "0.4.11"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debugUnsigned{
            buildConfigField("long", "TIMESTAMP", System.currentTimeMillis() + "L")
        }
        unsignedProguard{
            buildConfigField("long", "TIMESTAMP", System.currentTimeMillis() + "L")
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("long", "TIMESTAMP", System.currentTimeMillis() + "L")
            signingConfig signingConfigs.release
        }
        release {
            signingConfig signingConfigs.release
            buildConfigField("long", "TIMESTAMP", System.currentTimeMillis() + "L")
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

android.defaultConfig.ndk.debugSymbolLevel = 'FULL'

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "com.google.android.gms:play-services-games-v2:+"
    implementation 'androidx.appcompat:appcompat:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
}